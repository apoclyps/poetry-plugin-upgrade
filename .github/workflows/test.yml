name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.event_name != 'pull_request' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  test:
    name: Run lint/test on python v${{ matrix.python-version }}
    runs-on: [ubuntu-latest]
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install poetry==1.8.2

      - name: Configure poetry
        run: |
          python -m poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: python -m poetry install --only=dev --no-root

      - name: Run Tox
        run: poetry run tox

      - name: Lint
        run: |
          source $(poetry env info --path)/bin/activate
          pre-commit install --install-hooks
          pre-commit run --all-files
          pre-commit run commitizen-branch --hook-stage push

      - name: Build
        run: poetry build
