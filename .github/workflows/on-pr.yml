name: test

on:
  pull_request:
    branches:
      - "*"

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.6.1

      - name: Install dependencies
        run: poetry install

      - name: Lint
        run: |
          source $(poetry env info --path)/bin/activate
          pre-commit install --install-hooks
          pre-commit run --all-files
          pre-commit run commitizen-branch --hook-stage push

      - name: Test
        run: |
          source $(poetry env info --path)/bin/activate
          pytest tests -vvv
          poetry upgrade --help

      - name: Build
        run: poetry build

  lint-commit-messages:
    name: lint commit message
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install commitizen
        run: |
          python -m pip install commitizen
      - name: Commitizen check
        run: |
          cz check --rev-range HEAD^!

  lint-commit-title:
    # default: lints titles using https://github.com/commitizen/conventional-commit-types
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: amannn/action-semantic-pull-request@v5.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
